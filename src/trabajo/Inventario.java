package trabajo;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import static java.nio.file.Files.move;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import static trabajo.Login.Equiz;
import static trabajo.producto.CantidadMinimaDeCaracteres;

public class Inventario extends javax.swing.JFrame {

    producto Prod = new producto();

    VariablesDelServicio2 Var3 = new VariablesDelServicio2();
    FuncionesASerializar2 Ser3 = new FuncionesASerializar2();
    DefaultTableModel TablaDeDatos;
    Vector Cabeceras4 = new Vector();
    
    private TableRowSorter trsFiltro;
    int move;

    public Inventario() {
        super("SISTEMA INTEGRADO DE FACTURACIÃ“N");
        setIconImage(new ImageIcon(getClass().getResource("/iconos/invoice.png")).getImage());
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        
        ImageIcon ImagenBackground2 = new ImageIcon("src/Imagenes/fondo.png");
        Icon IconoBackground2 = new ImageIcon(ImagenBackground2.getImage().getScaledInstance(fondo.getWidth(), fondo.getHeight(), Image.SCALE_DEFAULT));
        fondo.setIcon(IconoBackground2);
        
      

        EliminarI2.setEnabled(false);
        editarDescripcion.setEnabled(false);
        EditarI3.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cerrar = new javax.swing.JLabel();
        atras = new javax.swing.JLabel();
        Titulo = new javax.swing.JLabel();
        separador = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Buscador = new javax.swing.JTextField();
        TipoDeBusqueda = new javax.swing.JComboBox<>();
        EditarI3 = new javax.swing.JButton();
        editarDescripcion = new javax.swing.JButton();
        EliminarI2 = new javax.swing.JButton();
        GenerarI2 = new javax.swing.JButton();
        TitleInventario = new javax.swing.JLabel();
        TitleDescripcion = new javax.swing.JLabel();
        Descripcion = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        InventarioTabla = new javax.swing.JScrollPane();
        Tabla3 = new javax.swing.JTable();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cerrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/miniminizel.png"))); // NOI18N
        cerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cerrarMouseClicked(evt);
            }
        });
        getContentPane().add(cerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 0, 50, 60));

        atras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        atras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/atras.png"))); // NOI18N
        atras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atrasMouseClicked(evt);
            }
        });
        getContentPane().add(atras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 60));

        Titulo.setBackground(new java.awt.Color(51, 51, 255));
        Titulo.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        Titulo.setForeground(new java.awt.Color(255, 255, 255));
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titulo.setText("Inventario");
        Titulo.setOpaque(true);
        getContentPane().add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 60));

        separador.setBackground(new java.awt.Color(255, 255, 255));
        separador.setOpaque(true);
        getContentPane().add(separador, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 830, 10));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Buscar:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 80, 30));

        Buscador.setForeground(new java.awt.Color(204, 204, 204));
        Buscador.setText("Escribe el nombre de tu busqueda...");
        Buscador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BuscadorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BuscadorFocusLost(evt);
            }
        });
        Buscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BuscadorKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BuscadorKeyTyped(evt);
            }
        });
        getContentPane().add(Buscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 430, 30));

        TipoDeBusqueda.setBackground(new java.awt.Color(0, 153, 255));
        TipoDeBusqueda.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TipoDeBusqueda.setForeground(new java.awt.Color(255, 255, 255));
        TipoDeBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Codigo", "Precio", "Nombre" }));
        TipoDeBusqueda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TipoDeBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipoDeBusquedaActionPerformed(evt);
            }
        });
        getContentPane().add(TipoDeBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 90, 130, 30));

        EditarI3.setBackground(new java.awt.Color(0, 153, 255));
        EditarI3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/edit_add.png"))); // NOI18N
        EditarI3.setText("Editar del Inventario");
        EditarI3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        EditarI3.setBorderPainted(false);
        EditarI3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EditarI3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarI3ActionPerformed(evt);
            }
        });
        getContentPane().add(EditarI3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 470, 160, 30));

        editarDescripcion.setBackground(new java.awt.Color(0, 153, 255));
        editarDescripcion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/edit_add.png"))); // NOI18N
        editarDescripcion.setText("Editar");
        editarDescripcion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editarDescripcion.setBorderPainted(false);
        editarDescripcion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editarDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarDescripcionActionPerformed(evt);
            }
        });
        getContentPane().add(editarDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, 100, 30));

        EliminarI2.setBackground(new java.awt.Color(0, 153, 255));
        EliminarI2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/recycle_bin_f.png"))); // NOI18N
        EliminarI2.setText("Eliminar del Inventario");
        EliminarI2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        EliminarI2.setBorderPainted(false);
        EliminarI2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EliminarI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarI2ActionPerformed(evt);
            }
        });
        getContentPane().add(EliminarI2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 510, 160, 30));

        GenerarI2.setBackground(new java.awt.Color(0, 153, 255));
        GenerarI2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/add.png"))); // NOI18N
        GenerarI2.setText("Generar Inventario");
        GenerarI2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        GenerarI2.setBorderPainted(false);
        GenerarI2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GenerarI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarI2ActionPerformed(evt);
            }
        });
        getContentPane().add(GenerarI2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 430, 160, 30));

        TitleInventario.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        TitleInventario.setForeground(new java.awt.Color(255, 255, 255));
        TitleInventario.setText("Inventario:");
        getContentPane().add(TitleInventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        TitleDescripcion.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        TitleDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        TitleDescripcion.setText("Descripcion:");
        getContentPane().add(TitleDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));

        txtArea.setEditable(false);
        txtArea.setColumns(20);
        txtArea.setRows(5);
        txtArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAreaMouseClicked(evt);
            }
        });
        Descripcion.setViewportView(txtArea);

        getContentPane().add(Descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 426, 600, 120));

        Tabla3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Precio", "Nombre"
            }
        ));
        Tabla3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla3MouseClicked(evt);
            }
        });
        InventarioTabla.setViewportView(Tabla3);

        getContentPane().add(InventarioTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 790, 210));
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GenerarI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarI2ActionPerformed

        llenarTabla();
        EliminarI2.setEnabled(true);
        editarDescripcion.setEnabled(true);
        EditarI3.setEnabled(true);

//        String cod = Prod.getTxtCodigo().getText();
//        String cas = Prod.getTxtPrecio().getText();
//        String nam = Prod.getTxtNombre().getText();
//        
//        Var3.setCode(cod);
//        Var3.setCash(cas);
//        Var3.setName(nam);
//        
//        Ser3.guardar2(Var3);
//        Ser3.guardarTXT2(Var3);
//        
//        Tabla3.setModel(Ser3.listaTabla2());
//        
    }//GEN-LAST:event_GenerarI2ActionPerformed

    private String[][] generarTabla(ArrayList<ProductoC> productos) {
        String[][] pro = new String[productos.size()][5];
        descripciones = new ArrayList<>();
        for (int i = 0; i < productos.size(); i++) {
            pro[i][0] = productos.get(i).getCodigo();
            pro[i][1] = productos.get(i).getPrecio() + "";
            pro[i][2] = productos.get(i).getNombre();
            descripciones.add(productos.get(i).getDescripcion());
        }
        return pro;
    }

    private void llenarTabla() {

        ProductoBD conexionProducto = new ProductoBD(false);
        String[][] datos = generarTabla((ArrayList) conexionProducto.listarProductos());
        Tabla3.setModel(new DefaultTableModel(datos, new String[]{"Codigo", "Precio", "Nombre"}));

    }
    private void EliminarI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarI2ActionPerformed

        int ConfirmarEliminar = JOptionPane.showConfirmDialog(null, "Seguro que deseas eliminar?");

        if (JOptionPane.YES_OPTION == ConfirmarEliminar) {
            try {
                ProductoBD conexionProducto = new ProductoBD(false);
                boolean exito = conexionProducto.eliminarProducto((String) Tabla3.getValueAt(Tabla3.getSelectedRow(), 0));
                if (exito) {
                    llenarTabla();
                }
            } catch (Exception e) {
JOptionPane.showMessageDialog(null, e.getMessage());
            }

        }

    }//GEN-LAST:event_EliminarI2ActionPerformed

    private void editarDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarDescripcionActionPerformed

        int registro = Tabla3.getSelectedRow();
        int dato = 3;
        String codigo = Tabla3.getValueAt(registro, 0).toString();
        String nco = "Descripcion";

        String d = txtArea.getText();
        if (d != null && !d.trim().isEmpty() && d != descripciones.get(registro)) {
            try {
                modificar(d, dato);
                ProductoBD conexionProducto = new ProductoBD(false);
                boolean exito = conexionProducto.editarDatoProducto(modificar(d, dato), dato, codigo);
                if (exito) {
                    llenarTabla();
                }
            } catch (Exception e) {
            }

        } else {

        }
    }//GEN-LAST:event_editarDescripcionActionPerformed

    private ArrayList<String> descripciones;
    private void Tabla3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla3MouseClicked
        txtArea.setText(descripciones.get(Tabla3.getSelectedRow()));

    }//GEN-LAST:event_Tabla3MouseClicked

    private void EditarI3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarI3ActionPerformed

        int registro = Tabla3.getSelectedRow();
        int dato = Tabla3.getSelectedColumn();
        String codigo = Tabla3.getValueAt(registro, 0).toString();
        String nco = Tabla3.getModel().getColumnName(dato);
        int respuesta = JOptionPane.showConfirmDialog(null, "Estas seguro que deseas modificar " + nco);

        if (respuesta == 0) {
            String d = JOptionPane.showInputDialog(null, "Ingrese " + nco, "Ingrese " + nco);
            if (d != null && !d.trim().isEmpty()) {
                try {
                    modificar(d, dato);
                    ProductoBD conexionProducto = new ProductoBD(false);
                    boolean exito = conexionProducto.editarDatoProducto(modificar(d, dato), dato, codigo);
                    if (exito) {
                        llenarTabla();
                        txtArea.setEditable(false);
                    }
                } catch (Exception e) {
                }

            }
        } else {

        }


    }//GEN-LAST:event_EditarI3ActionPerformed

    private void txtAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAreaMouseClicked
        if (Tabla3.getSelectedRow() != -1) {
            txtArea.setEditable(true);
        }
    }//GEN-LAST:event_txtAreaMouseClicked

    public void Atras() {

        int salir = JOptionPane.showConfirmDialog(null, "Â¿Esta seguro que deseas regresar?", "Confirmar", JOptionPane.YES_NO_OPTION);

        if (salir == 1) {
        } else if (salir == 0) {
            dispose();
        }
    }
    
    private void atrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atrasMouseClicked
        Atras();
    }//GEN-LAST:event_atrasMouseClicked

    public void MenuPrincipal() {

        int salir = JOptionPane.showConfirmDialog(null, "Â¿Esta seguro que deseas regresar a la pantalla principal?", "Confirmar", JOptionPane.YES_NO_OPTION);

        if (salir == 1) {
        } else if (salir == 0) {
            new PRINCIPAL().setVisible(true);
            dispose();
        }
    }
        
    private void cerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseClicked
        setExtendedState(ICONIFIED);
    }//GEN-LAST:event_cerrarMouseClicked

    private void BuscadorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BuscadorFocusGained
        if (Buscador.getText().equalsIgnoreCase("Escribe el nombre de tu busqueda...")) {
            Buscador.setText("");
            Buscador.setForeground(Color.black);
        }
    }//GEN-LAST:event_BuscadorFocusGained

    private void BuscadorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BuscadorFocusLost
        if (Buscador.getText().equalsIgnoreCase("")) {
            Buscador.setText("Escribe el nombre de tu busqueda...");
            Buscador.setForeground(Color.gray);
        }
    }//GEN-LAST:event_BuscadorFocusLost

    private void BuscadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BuscadorKeyPressed
        char Entrar = evt.getKeyChar();
        char Cambiar = evt.getKeyChar();

        if (evt.getKeyCode() == evt.VK_ENTER) {

            JOptionPane.showMessageDialog(null, "Su busqueda fue realizada con exito.", "BUSQUEDA EXITOSA", JOptionPane.INFORMATION_MESSAGE);
        }

        if (evt.getKeyCode() == evt.VK_DOWN) {

            move++;

            //System.out.println("sumar move: "+move);

            if (move > 4) {

                move = 4;

            }else{

                TipoDeBusqueda.setSelectedIndex(move);

            }
        }

        if (evt.getKeyCode() == evt.VK_UP) {

            move--;
            //System.out.println("restar move: "+move);

            if (move < 0) {

                move = 0;

            }else{

                TipoDeBusqueda.setSelectedIndex(move);

            }

        }
    }//GEN-LAST:event_BuscadorKeyPressed

    private void BuscadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BuscadorKeyTyped
        Buscador.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e){

                String cadena = (Buscador.getText());
                Buscador.setText(cadena);
                repaint();
                filtro1();
            }

        });

        trsFiltro = new TableRowSorter(Tabla3.getModel());
        Tabla3.setRowSorter(trsFiltro);
    }//GEN-LAST:event_BuscadorKeyTyped

    private void TipoDeBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipoDeBusquedaActionPerformed

    }//GEN-LAST:event_TipoDeBusquedaActionPerformed

    
    
    private void filtro1(){
    
        int columnaBuscar = 0;
        
        if(TipoDeBusqueda.getSelectedItem().toString()=="Codigo"){
        
            columnaBuscar=0;
        }
        if(TipoDeBusqueda.getSelectedItem().toString()=="Precio"){
        
            columnaBuscar=1;
        }
        if(TipoDeBusqueda.getSelectedItem()=="Nombre"){
        
            columnaBuscar=2;
        }
        
        trsFiltro.setRowFilter(RowFilter.regexFilter(Buscador.getText(), columnaBuscar));
        
    }
    
    private ProductoC modificar(String dato, int columna) {
        ProductoC aux = null;
        switch (columna) {
            case 0:
                aux = new ProductoC(dato, null, null, null, 0);
                break;
            case 1:
                aux = new ProductoC(null, null, null, null, Integer.valueOf(dato));
                break;
            case 2:
                aux = new ProductoC(null, null, dato, null, 0);
                break;
            case 3:
                aux = new ProductoC(null, dato, null, null, 0);
                break;
        }
        return aux;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Buscador;
    private javax.swing.JScrollPane Descripcion;
    private javax.swing.JButton EditarI3;
    private javax.swing.JButton EliminarI2;
    private javax.swing.JButton GenerarI2;
    private javax.swing.JScrollPane InventarioTabla;
    private javax.swing.JTable Tabla3;
    private javax.swing.JComboBox<String> TipoDeBusqueda;
    private javax.swing.JLabel TitleDescripcion;
    private javax.swing.JLabel TitleInventario;
    private javax.swing.JLabel Titulo;
    private javax.swing.JLabel atras;
    private javax.swing.JLabel cerrar;
    private javax.swing.JButton editarDescripcion;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel separador;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
